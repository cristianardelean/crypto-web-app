trigger: none
 
pool: default
 
variables:
  - name: imageRepo
    value: 'repo-crypto-app'
  - name: dockerfile
    value: 'app/Dockerfile'
  - name: containerRegistry
    value: 'registruaks'
 
stages :
- stage: Build
  displayName: Build and push stage
  jobs: 
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
         command: buildAndPush
         repository: ${{ variables.imageRepo }}
         dockerfile: ${{ variables.dockerfile }}
         containerRegistry: ${{ variables.containerRegistry }}
         tags: |
           $(Build.BuildId)

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  pool: default
  variables:
    acrsecret: k8sacrauth
    acrdevurl: registruaks.azurecr.io/repo-crypto-app
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool: default
    environment: 'k8s-prod.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'k8s-prod-aks-crypto-default-1643254736046'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'registruaks'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'k8s-connection'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              containers: '$(acrdevurl)/$(imageRepo):$tag'
     